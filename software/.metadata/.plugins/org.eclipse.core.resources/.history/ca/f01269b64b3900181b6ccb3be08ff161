// Standard includes
#include <stddef.h>
#include <stdio.h>
#include <string.h>

// Scheduler includes
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "freertos/queue.h"
#include "freertos/semphr.h"

#include <altera_avalon_pio_regs.h>

typedef struct {
	double freq;
	TickType_t timestamp; // if configUSE_16_BIT_TICKS ? u16 : u32
};

// Definition of Task Stacks
#define   TASK_STACKSIZE       2048

void freq_relay(){
	unsigned int temp = IORD(FREQUENCY_ANALYSER_BASE, 0);
	printf("%f Hz\n", 16000/(double)temp);
	return;
}

int main(int argc, char* argv[], char* envp[])
{
	alt_irq_register(FREQUENCY_ANALYSER_IRQ, 0, freq_relay);

	vTaskStartScheduler();
	for (;;);

	return 0;
}



